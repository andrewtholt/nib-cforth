bye  c_bye
xor  c_xor
u/mod  c_uslmod
u*  c_ustar
toggle  c_toggle
swap  c_swap
sp@  c_spat
sp!  c_spstor
s->d  c_stod
rp@  c_rpat
rp!  c_rpstor
rot  c_rot
-rot  c_min_rot
r@  c_rat
r>  c_rfrom
p@  c_portat
p!  c_portstor
pw@  c_portwat
pw!  c_portwstor
over  c_over
or  c_or
not  c_not
negate  c_negate
lit  c_lit
leave  c_leave
j  c_j
i'  c_itick
i  c_i
exit  c_exit
execute  c_execute
evaluate  c_evaluate
servent  c_servent
enclose  c_enclose
dup  c_dup
nip  c_nip
drop  c_drop
dnegate  c_dnegate
digit  c_digit
ddup  c_ddup
ddrop  c_ddrop
d+  c_dplus
d!  c_dstor
c@  c_cat
w@  c_wat
c!  c_cstor
w!  c_wstor
0branch  c_zbranch
branch  c_branch
and  c_and
@  c_at
>r  c_tor
<loop>  c_aloop
<+loop>  c_aploop
<find>  c_afind
<fill>  c_afill
<do>  c_ado
<cmove>  c_acmove
<<cmove>  c_alcmove
</loop>  c_aslloop
<  c_less
2-  c_2minus
2+  c_2plus
2*  c_2star
1-  c_1minus
1+  c_1plus
0<  c_zless
-  c_minus
+!  c_pstor
+  c_plus
!  c_stor
h.  c_hdot
]  c_rbrak
[  c_lbrak
word  c_word
vocabulary  c_vocabulary
traverse  c_traverse
s0  c_s0
pick  c_pick
number  c_number
max  c_max
m/mod  c_mslmod
m+  c_mplus
lfa  c_lfa
latest  c_latest
key  c_key
interpret  c_interpret
hold  c_hold
hex  c_hex
here  c_here
expect  c_expect
accept  c_accept
emit  c_emit
definitions  c_definitions
decimal  c_decimal
d+-  c_dplusm
cr  c_cr
count  c_count
convert  c_convert
cmove  c_cmove
cfa  c_cfa
allot  c_allot
abort  c_abort
?key  c_qterminal
?dup  c_qdup
>  c_greater
=  c_equal
<cmove  c_lcmove
0=  c_zequal
-trailing  c_mtrailing
-find  c_mfind
+-  c_plusm
*  c_star
'stream  c_tstream
?comp  c_qcomp
?csp  c_qcsp
<emit>  c_aemit
<key>  c_akey
?stream  c_qstream
?pairs  c_qpairs
space  c_space
smudge  c_smudge
sign  c_sign
query  c_query
pfa  c_pfa
pad  c_pad
nfa  c_nfa
move  c_move
min  c_min
immediate  c_immediate
find  c_find
d<  c_dless
cold  c_cold
then  c_then
c,  c_ccomma
begin  c_begin
abs  c_abs
0>  c_zgreater
,  c_comma
(  c_lpara
#  c_hash
dabs  c_dabs
[compile]  c_bcompile
u<  c_uless
type  c_type
spaces  c_spaces
quit  c_quit
fill  c_fill
m/  c_msl
m*/  c_mstarsl
m*  c_mstar
compile  c_compile
#s  c_hashs
#>  c_hashgreat
<#  c_lesshash
where  c_where
until  c_until
roll  c_roll
loop  c_loop
literal  c_literal
if  c_if
forget  c_forget
endif  c_endif
else  c_else
<builds  c_builds
create  c_builds
does>  c_does
do  c_do
create  c_create
again  c_again
?stack  c_qstack
;  c_semi
/mod  c_slmod
/loop  c_slloop
+loop  c_ploop
*/mod  c_starslmod
blank  c_blank
while  c_while
variable  c_variable
repeat  c_repeat
mod  c_mod
dliteral  c_dliteral
constant  c_constant
:  c_colon
/  c_slash
'  c_tick
*/  c_starsl
2/  c_2slash
user  c_user
depth  c_depth
d.r  c_ddotr
d.  c_ddot
.r  c_dotr
u.  c_udot
.  c_dot
?  c_quest
endf  c_endf
end-all  c_endall
<fkey>  c_afkey
<femit>  c_afemit
debug  c_debug
align-ptr  c_align_ptr
fopenr  c_fopenr
fopenw  c_fopenw
fopena  c_fopena
fclose  c_fclose
fread  c_fread
fwrite  c_fwrite
parse  c_parse
getf  c_getf
include  c_getf
save  c_save
load  c_load
jsr  c_jsr
id.  c_iddot
words  c_vlist
.s  c_dots
quiet c_quiet
verbose  c_verbose
cpu c_cpu
os c_os
banner c_banner
dlopen c_dlopen
dlclose c_dlclose
dump c_dump
db-bucket-stats dbBucketStats
db-create  dbCreate
db-grow  dbGrow
db-occupancy dbOccupancy
db-set-alarm  dbSetAlarmLevel
db-get-alarm  dbGetAlarmLevel
db-set-flags  dbSetFlags
db-set-max-records  dbSetMaxRecords
db-set-name-size  dbSetNameSize
db-set-def-size dbSetDefSize
db-get-name dbGetName
db-get-def dbGetDef
db-set-name dbSetName
db-set-def dbSetDef
db-update dbUpdate
db-status dbStatus
$db-lookup dbLookup
$db-dump dbDump
$db-load dbLoad
db-update dbUpdate
db-install dbInstall
db-display-record dbDisplayRecord
db-debug-dump dbDebugDump
db-find-first-def dbFindFirstDef
db-find-next-def dbFindNextDef
db-find-first dbFindFirst
db-find-next dbFindNext
db-delete dbDelete
set-prompt c_setprompt
